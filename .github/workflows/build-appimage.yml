name: Build AppImage

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
  release:
    types: [ created, prereleased ]

permissions:
  contents: write

jobs:
  build-appimage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y desktop-file-utils libfuse2
        
    - name: Download and extract Python AppImage
      run: |
        wget -O python.AppImage "https://github.com/niess/python-appimage/releases/download/python3.9/python3.9.23-cp39-cp39-manylinux2014_x86_64.AppImage"
        chmod +x python.AppImage
        ./python.AppImage --appimage-extract >/dev/null 2>&1
        mkdir -p AppDir/usr/bin
        cp -r squashfs-root/usr/bin/* AppDir/usr/bin/
        cp -r squashfs-root/usr/lib AppDir/usr/
        cp -r squashfs-root/usr/share AppDir/usr/ || echo "No share directory to copy"
        cp -r squashfs-root/opt AppDir/ || echo "No opt directory to copy"
        rm -f AppDir/AppRun

    - name: Bundle application with Python
      run: |
        cp rclone-gui-manager.py AppDir/usr/bin/
        chmod 755 AppDir/usr/bin/rclone-gui-manager.py
        
        echo '#!/bin/bash' > AppDir/usr/bin/rclone-gui-manager
        echo 'DIR="$(dirname "$0")"' >> AppDir/usr/bin/rclone-gui-manager
        echo '"$DIR/python3.9" "$DIR/rclone-gui-manager.py" "$@"' >> AppDir/usr/bin/rclone-gui-manager
        chmod 755 AppDir/usr/bin/rclone-gui-manager
        
        echo '[Desktop Entry]' > AppDir/rclone-gui-manager.desktop
        echo 'Type=Application' >> AppDir/rclone-gui-manager.desktop
        echo 'Name=Rclone GUI Manager' >> AppDir/rclone-gui-manager.desktop
        echo 'Comment=Manage rclone remotes with a GUI' >> AppDir/rclone-gui-manager.desktop
        echo 'Exec=rclone-gui-manager' >> AppDir/rclone-gui-manager.desktop
        echo 'Icon=rclone-gui-manager' >> AppDir/rclone-gui-manager.desktop
        echo 'Terminal=false' >> AppDir/rclone-gui-manager.desktop
        echo 'Categories=Utility;FileTools;' >> AppDir/rclone-gui-manager.desktop
        chmod 644 AppDir/rclone-gui-manager.desktop
        
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        
        cp AppDir/rclone-gui-manager.desktop AppDir/usr/share/applications/
        
        if [ -f "rclone-gui-manager.svg" ]; then
          cp rclone-gui-manager.svg AppDir/rclone-gui-manager.svg
          cp rclone-gui-manager.svg AppDir/usr/share/icons/hicolor/256x256/apps/rclone-gui-manager.svg
          chmod 644 AppDir/rclone-gui-manager.svg
          chmod 644 AppDir/usr/share/icons/hicolor/256x256/apps/rclone-gui-manager.svg
        fi
        
        echo '#!/bin/bash' > AppDir/AppRun
        echo 'HERE="$(dirname "$(readlink -f "$0")")"' >> AppDir/AppRun
        echo 'exec "$HERE/usr/bin/rclone-gui-manager" "$@"' >> AppDir/AppRun
        chmod 755 AppDir/AppRun
        
        echo "AppDir structure:"
        find AppDir -type f | sort

    - name: Validate AppDir
      run: |
        echo "Checking required files:"
        if [ ! -f "AppDir/AppRun" ]; then
          echo "ERROR: AppRun not found"
          exit 1
        fi
        
        if [ ! -f "AppDir/rclone-gui-manager.desktop" ]; then
          echo "ERROR: Desktop file not found"
          exit 1
        fi
        
        if [ ! -f "AppDir/usr/bin/rclone-gui-manager" ]; then
          echo "ERROR: Main executable not found"
          exit 1
        fi
        
        if [ ! -f "AppDir/usr/bin/python3" ]; then
          echo "ERROR: Python not found"
          exit 1
        fi
        
        if [ ! -f "AppDir/rclone-gui-manager.svg" ]; then
          echo "Warning: Icon not found, but continuing"
        fi
        
        echo "File permissions:"
        ls -lh AppDir/
        ls -lh AppDir/usr/bin/
        
        echo "Desktop file validation:"
        cat AppDir/rclone-gui-manager.desktop

    - name: Download AppImageTool
      run: |
        wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/1.9.0/appimagetool-x86_64.AppImage"
        chmod +x appimagetool

    - name: Create AppImage
      run: |
        echo "Creating AppImage..."
        ARCH=x86_64 ./appimagetool AppDir/
        
        if [ -f "Rclone_GUI_Manager-x86_64.AppImage" ]; then
          mv Rclone_GUI_Manager-x86_64.AppImage rclone-gui-manager-x86_64.AppImage
        elif ls Rclone_GUI_Manager*.AppImage 1> /dev/null 2>&1; then
          mv Rclone_GUI_Manager*.AppImage rclone-gui-manager-x86_64.AppImage
        elif ls *.AppImage 1> /dev/null 2>&1; then
          mv *.AppImage rclone-gui-manager-x86_64.AppImage
        fi
        
        if [ ! -f "rclone-gui-manager-x86_64.AppImage" ]; then
          echo "Error: AppImage was not created successfully"
          ls -la *.AppImage 2>/dev/null || echo "No AppImage files found"
          exit 1
        fi
        
        chmod +x rclone-gui-manager-x86_64.AppImage
        echo "AppImage created successfully:"
        ls -lh rclone-gui-manager-x86_64.AppImage

    - name: Verify AppImage
      run: |
        echo "AppImage information:"
        ./rclone-gui-manager-x86_64.AppImage --appimage-version || echo "Version check failed"
        echo ""
        echo "AppImage info:"
        ./rclone-gui-manager-x86_64.AppImage --appimage-info || echo "Info check failed"

    - name: Upload AppImage as artifact
      uses: actions/upload-artifact@v4
      with:
        name: rclone-gui-manager-appimage
        path: rclone-gui-manager-x86_64.AppImage

    - name: Upload AppImage to release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        files: rclone-gui-manager-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}